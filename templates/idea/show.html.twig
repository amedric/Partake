{% extends 'base.html.twig' %}

{% block title %}Idea{% endblock %}

{% block header %}
    <div class="ptk-ideaHeaderContainer">
        <div class="ptk-titleContainer">
            <h1 class="ptk-ideaTitleHeader">{{ idea.title }}</h1>
            <h1 class="ptk-ideaTitleHeader">{{ idea.title }}</h1>
        </div>
        <div class="ptk-underTitleBlock">
            <p class="ptk-projectContent">{{ idea.content }}</p>
        </div>
        <div class="ptk-linksContainer">
        </div>
        <div class="ptk-ideaUnderContentContainer">
            <div class="ptk-ideaCardStatsContainer">
                <div class="ptk-cardIconStats">
                    {% if likedUser is not empty %}
                        <a href="{{ path('app_like_dislike', {'id': idea.id}) }}" class="ptk-cardsLink">
                            <img src="{{ asset('build/images/blackheart.png') }}" class="ptk-ideaInfoIcons" alt="Dislike" title="Unlike this idea">
                        </a>
                    {% else %}
                        <a href="{{ path('app_like_like', {'id': idea.id}) }}" class="ptk-cardsLink">
                            <img src="{{ asset('build/images/like.png') }}" class="ptk-ideaInfoIcons" alt="Like" title="Like this idea">
                        </a>
                    {% endif %}
                    <p class="ptk-cardStatsNo">{{ ideaLikes }}</p>
                </div>
                <div class="ptk-cardIconStats">
                    <img src="{{ asset('build/images/comment.png') }}" class="ptk-ideaInfoIcons" alt="Comments" title="Number of comments">
                    <p class="ptk-ideaStatsNo">
                        {% for nbComment in nbComments %}
                            {% if nbComment.id == idea.id %}
                                {{ nbComment.ideaComments is null ? 0 : nbComment.ideaComments }}
                            {% endif %}
                        {% endfor %}
                    </p>
                </div>
                <div class="ptk-cardIconStats">
                    <img src="{{ asset('build/images/view.png') }}" class="ptk-ideaInfoIcons" alt="Views" title="Number of views">
                    <p class="ptk-ideaStatsNo">{{ idea.ideaViews }}</p>
                </div>
            </div>
            <div class="ptk-createdAtContainer">
                <p class="ptk-createdAt">Created by:</p>
                <p class="ptk-createdAtContent">{{ idea.user.fullName }}</p>
                <p class="ptk-createdAt">on:</p>
                <p class="ptk-createdAtContent">{{ idea.createdAt ? idea.createdAt|date('d-m-Y') : '' }}</p>
            </div>
        </div>
    </div>
{% endblock %}

{% block filters %}
    <div class="commentsTitleContainer">
        <p class="ptk-blockDescription">Comments:</p>
    </div>
    <div class="ptk-filterContainer">
        <p class="ptk-filterSeparators"> Order by: </p>
        <a href="#" class="ptk-filterLinks">
            <span class="ptk-linksHover">newest</span></a>
        <p class="ptk-filterSeparators">/</p>
        <a href="#" class="ptk-filterLinks">
            <span class="ptk-linksHover">oldest</span></a>
        <p class="ptk-filterSeparators">/</p>
        <a href="#" class="ptk-filterLinks">
            <span class="ptk-linksHover">most liked</span></a>
    </div>
{% endblock %}

{% block underFilters %}
    <div class="ptk-ideaPostCommentContainer">
        <p style="text-align: center;">Leave a comment</p>
        {{ include('comment/_form.html.twig') }}
    </div>
{% endblock %}

{% block modal %}
{#    <div class="ptk-modalNewIdeaContainer">#}
{#        {% include '/idea/new.html.twig' %}#}
{#    </div>#}
{#    <div class="ptk-modalEditProjectContainer">#}
{#        {% include '/project/edit.html.twig' %}#}
{#    </div>#}
{% endblock %}

{% block javascripts %}
    <script>
        let modal = document.getElementsByClassName("ptk-modalContainer");

        //----------------- New idea modal -----------------------
        let NewIdeaModalLink = document.getElementById("ptk-NewIdeaModalLink");
        let closeNewIdeaModalLink = document.getElementById("ptk-closeNewIdeaModalLink");
        let modalNewIdeaContainer = document.getElementsByClassName("ptk-modalNewIdeaContainer")
        let formNewIdea = document.getElementById("ptk-newIdeaFormContainer")

        NewIdeaModalLink.addEventListener("click", function(e) {
            modal[0].classList.add("ptk-modalContainerShow");
            modalNewIdeaContainer[0].classList.add("ptk-showModalContainers")
            formNewIdea.classList.add("ptk-formContainerShow");
        });
        closeNewIdeaModalLink.addEventListener("click", function(e) {
            modal[0].classList.remove("ptk-modalContainerShow");
            modalNewIdeaContainer[0].classList.remove("ptk-showModalContainers")
            formNewIdea.classList.remove("ptk-formContainerShow");
        });

        // ----------------- edit project modal -----------------------
        let editProjectModalLink = document.getElementById("ptk-editProfileModalLink");
        let closeEditProjectModalLink = document.getElementById("ptk-closeEditProjectModalLink");
        let modalEditProjectContainer = document.getElementsByClassName("ptk-modalEditProjectContainer")
        let formEditProfile = document.getElementById("ptk-editProfileFormContainer")

        editProjectModalLink.addEventListener("click", function(e) {
            modal[0].classList.add("ptk-modalContainerShow");
            modalEditProjectContainer[0].classList.add("ptk-showModalContainers")
            formEditProfile.classList.add("ptk-formContainerShow");
            console.log(closeEditProjectModalLink, modalEditProjectContainer, formEditProfile)
        });
        closeEditProjectModalLink.addEventListener("click", function(e) {
            modal[0].classList.remove("ptk-modalContainerShow");
            modalEditProjectContainer[0].classList.remove("ptk-showModalContainers")
            formEditProfile.classList.remove("ptk-formContainerShow");
        });

        let flashMessages = document.querySelectorAll(".ptk-flashMessages");
        function fadeOutEffect() {
            flashMessages.forEach((msgs, index) => {// index will be current button index

                let fadeEffect = setInterval(function () {
                    if (!msgs.style.opacity) {
                        msgs.style.opacity = 1;
                    }
                    if (msgs.style.opacity > 0) {
                        msgs.style.opacity = 0;
                    }
                }, 2500);
            })
        }
        window.onload = fadeOutEffect;
    </script>
{% endblock %}

{% block body %}
    <div class="ptk-ideaCommentsSection">
        <div class="ptk-ideaCommentsContainer">
            {% for comment in comments %}
                {% if comment.idea.id == idea.id %}
                    <div class="ptk-ideaCommentsByUser">
                        <div class="ptk-commentUserComment">
                            <a href="#" class="ptk-ideaCommentUser">{{ comment.user.firstname }} {{ comment.user.lastname }}</a>
                            <p class="ptk-ideaComments">{{ comment.content }}</p>
                        </div>
                        <div class="ptk-commentBtns">
                            {% if app.user.id == comment.user.id %}
                                <a href="{{ path('app_comment_edit', {id: comment.id}) }}">
                                    <img src="{{ asset('build/images/modify-button-25.png') }}" alt="modify">
                                </a>
                                {{ include('comment/_delete_form.html.twig') }}
                            {% endif %}
                        </div>
                    </div>
                {% endif %}
            {% endfor %}
        </div>
    </div>
{% endblock %}
